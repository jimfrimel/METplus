[dir]
## Input data directories
## This is the location of your input files for METplus

# Where Your INPUT DATA Is.
PROJ_DIR = /path/to/GSDENS_MET_test

# All Output from METplus
TMP_DIR = {OUTPUT_BASE}/tmp
OUTPUT_BASE = /path/to/pytmp

METPLUS_BASE = /path/to/METplus
## OBSOLETE: MET_BUILD_BASE = /usr/local/met-6.1
MET_INSTALL_DIR = /lfs1/projects/dtc-hurr/MET/MET_releases/7.1_beta6
PARM_BASE = {METPLUS_BASE}/parm


# EXAMPLE OF SUPPORTED INPUT DIRECTORY/FILENAME structure
#
# .../prepbufr/
# prepbufr.gdas.2017060100
# prepbufr.gdas.2017060106
# prepbufr.gdas.2017060112
# prepbufr.gdas.2017060118
# prepbufr.gdas.2017060200
# prepbufr.gdas.2017060206
# prepbufr.gdas.2017060212
# prepbufr.gdas.2017060218
# ...
# prepbufr.gdas.2017063000
# prepbufr.gdas.2017063006
# prepbufr.gdas.2017063012
# prepbufr.gdas.2017063018

# OR
# .../nam/
# nam.20170601/nam.t00z.prepbufr.tm00
# nam.20170601/nam.t00z.prepbufr.tm03
# nam.20170601/nam.t06z.prepbufr.tm00
# nam.20170601/nam.t06z.prepbufr.tm03
# nam.20170601/nam.t12z.prepbufr.tm00
# nam.20170601/nam.t12z.prepbufr.tm03
# nam.20170601/nam.t18z.prepbufr.tm00
# nam.20170601/nam.t18z.prepbufr.tm03
# ...
# nam.20170630/nam.t00z.prepbufr.tm00
# nam.20170630/nam.t00z.prepbufr.tm03
# nam.20170630/nam.t06z.prepbufr.tm00
# nam.20170630/nam.t06z.prepbufr.tm03
# nam.20170630/nam.t12z.prepbufr.tm00
# nam.20170630/nam.t12z.prepbufr.tm03
# nam.20170630/nam.t18z.prepbufr.tm00
# nam.20170630/nam.t18z.prepbufr.tm03

#
# EXAMPLE DIRECTORY GSD DATA
# {PROJ_DIR}/2018070912/prepbufr/obs/prepbufr
# 20181900000.rap.t00z.prepbufr.tm00.20180709
# 20181900100.rap.t01z.prepbufr.tm00.20180709
# 20181910600.rap.t06z.prepbufr.tm00.20180710
# 20181921100.rap.t11z.prepbufr.tm00.20180711
#
# PB2NC
#
#
## Used with OUTPUT_BASE to create the output directory from PB2NC

# jtf ????????????????? should wrapper just use PREPBUFR_DATA_DIR 
# INPUT: searches PREPBUFR_DATA_DIR/PREPBUFR_MODEL_DIR_NAME
# THESE 2 DIRS MUST COMBINE TO BE A Directory ABOVE the Parent Directory of the prebbufr data files.
#
# This works but results in a double slash .../pytmp//conus_ne/...
#PREPBUFR_DATA_DIR = {PROJ_DIR}/prepbufr/rap
#PREPBUFR_MODEL_DIR_NAME = 

# This is the prep bufr input data directories
# 20180709
# 20180710
# 20180711
PREPBUFR_DATA_DIR = {PROJ_DIR}/prepbufr
PREPBUFR_MODEL_DIR_NAME = rap

# Where the pb2nc netcdf output files are written
#PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/{PREPBUFR_MODEL_DIR_NAME}/conus_ne
PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/rap

[regex_pattern]
PREPBUFR_DIR_REGEX = .*\/rap\/(2[0-9]{7}).*
#PREPBUFR_DIR_REGEX =
# This is just used for the files to search for in the subdirectories.
# any pattern grouping is NOT used for file time determination
#PREPBUFR_FILE_REGEX = .*rap.t([0-9]{2})z.prepbufr.tm([0-9]{2}).*
PREPBUFR_FILE_REGEX = .*

[filename_templates]
NC_FILE_TMPL = {valid?fmt=%Y%j}{cycle?fmt=%HH}{valid?fmt=%M}.rap.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.{valid?fmt=%Y%m%d}.nc
# Probably should be ???
# NC_FILE_TMPL = {valid?fmt=%Y%j}{cycle?fmt=%HH}{offset?fmt=%HH}.rap.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.{valid?fmt=%Y%m%d}.nc

[config]
## Configuration-related settings such as the process list, begin and end times, etc.
#PROCESS_LIST = PB2NC, PointStat
#PROCESS_LIST = EnsembleStat
PROCESS_LIST = PB2NC

## LOOP_METHOD
## Options are: processes, times
## Looping by time- runs all items in the PROCESS_LIST for each
## initialization time and repeats until all times have been evaluated.
## Looping by processes- run each item in the PROCESS_LIST for all
## specified initialization times then repeat for the next item in the
## PROCESS_LIST.
LOOP_METHOD = processes

# Logging levels: DEBUG, INFO, WARN, ERROR (most verbose is DEBUG)
LOG_LEVEL = DEBUG

## OVERWRITE OPTIONS
## Don't overwrite files if they already exist.
## Set to no if you do NOT want to override existing files
## Set to yes if you do want to override existing files
OVERWRITE_NC_OUTPUT = yes

# Time method by which to perform validation, either by init time or by valid
# time. Indicate by either BY_VALID or BY_INIT
# This is the YMD in the directory ... which for gsd is the init or cycle time ... so use BY_INIT
# That is, what does the PREP_BUFR_DIR (<group>) pattern represent ... the init or rather, the cycle time.
TIME_METHOD = BY_INIT

## MET Configuration files for pb2nc and point_stat
#PB2NC_CONFIG_FILE = {PARM_BASE}/met_config/PB2NCConfig_conus_sfc
PB2NC_CONFIG_FILE = {PROJ_DIR}/PB2NCConfig_HRRR
#POINT_STAT_CONFIG_FILE ={PARM_BASE}/met_config/PointStatConfig_conus_sfc

# For processing by init time or valid time, indicate the start and end hours
# in HH format
#START_HOUR = 00
#END_HOUR = 23

# jtf hour time of first file to process
START_HOUR = 12
# jtf hour time of last file to process
END_HOUR = 00

# Indicate the begin and end date, and interval (in hours)
BEG_TIME = 20180709
END_TIME = 20180711
# Used by pb2nc
# jtf ?????????????????????????????? Not sure what this really does ...
# 1 hour prepbufr files ./files ... ????
# Indicates the pb2nc file interval ... 
#INTERVAL_TIME = 24
INTERVAL_TIME = 1

# start and end dates are created by combining the date with
# start and end hours (format can be hh, hhmm, or hhmmss.
START_DATE = {BEG_TIME}{START_HOUR}
END_DATE = {END_TIME}{END_HOUR}

# Either conus_sfc or upper_air
# jtf WHAT IS THIS ?????????? IS THIS REQUIRED .... doesn't appear to be used in the wrapper ..
VERTICAL_LOCATION = conus_sfc

#
# PB2NC
#

# this is the name of model (and subdir to PREPBUFR_DATA_DIR)
# ex: nam for NAM or gdas for GDAS dir
#
# jtf This is used to build the output directory ?????????????? why ?????????????
#PREPBUFR_MODEL_DIR_NAME = prepbufr

# These are appended with PB2NC to differentiate the GRID, POLY, and MESSAGE_TYPE for point_stat.
PB2NC_GRID =
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all
# jtf ?????????? So this is already defined in 
#OBS_BUFR_VAR_LIST = PMO, TOB, TDO, UOB, VOB, PWO, TOCC, D_RH
OBS_BUFR_VAR_LIST = POB, QOB, TOB, ZOB, UOB, VOB, D_DPT, D_WDIR, D_WIND, D_RH, D_MIXR, D_PRMSL




#***********
# ***NOTE***
#***********
# SET TIME_SUMMARY_FLAG to False. There is a bug in met-6.1.
## For defining the time periods for summarization
# False for no time summary, True otherwise
TIME_SUMMARY_FLAG = False
TIME_SUMMARY_BEG = 000000  ;; start time of time summary in HHMMSS format
TIME_SUMMARY_END = 235959  ;; end time of time summary in HHMMSS format
TIME_SUMMARY_VAR_NAMES = PMO,TOB,TDO,UOB,VOB,PWO,TOCC
TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80  ;; a list of the statistics to summarize

# For both pb2nc and point_stat, the obs_window dictionary:
# jtf ?????????????????????
# jtf Action: THIS NEEDS CORRECT was OBS_WINDOW_BEG, change existing confs to use OBS_WINDOW_BEGIN
OBS_WINDOW_BEGIN = -2700
OBS_WINDOW_END = 2700

#
##  FILENAME TEMPLATES
#
[filename_templates]
## Output file template
#
# PB2NC
#
# For NAM
# For rap
#   YYYYJJJHHMM
# # 20181900000.rap.t00z.prepbufr.tm00.20180709
#NC_FILE_TMPL = prepbufr.nam.{init?fmt=%Y%m%d}.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.nc
# ? jtf Is there a way to  Keep input filename being processed and, just add .nc 

# jtf Looks like pb2nc is only using init, cycle, offset
#NC_FILE_TMPL = {init?fmt=%Y%m%d%H%j}.rap.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.{valid?fmt=%Y%m%d%H%j}.nc
#NC_FILE_TMPL = {init?fmt=%Y%m%d%H}.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.{valid?fmt=%Y%m%d%H}.nc

#
## REGEX PATTERN
#
[regex_pattern]

#
# PB2NC
#
## Define prepBUFR input directory and filename patterns, place parenthesis
## around any YMD, cycle time, and offset (fhr)
#

#PREPBUFR_DIR_REGEX ... must contain a CycleTimeGroup is this the init or valid time
#used in 

# GSDENS_MET_test/2018070912/prepbufr/obs/prepbufr/20181912300.rap.t23z.prepbufr.tm00.20180710
# ? jtf  ??????? What if There are no subdirectories ... 
# I'm  pointing to the parent directory. PREPBUFR_DATA_DIR/PREPBUFR_MODEL_DIR_NAM
# THIS MUST Match the Parent Directory of the prep-bufr files.
# THIS MUST ALSO Contain a Cycle Time Group
# IF IT DOES NOT ... change your directory layout so it does ..:(
#PREPBUFR_DIR_REGEX = .*nam.(2[0-9]{7})
#PREPBUFR_DIR_REGEX = .*(2[0-9]{9}) ;; exception, should exit gracefully
#PREPBUFR_DIR_REGEX = .*(2[0-9]{9})\/prepbufr\/obs\/prepbufr ;;pass
#PREPBUFR_DIR_REGEX = .*prepbufr\/obs\/prepbufr ;; exception - should work work, expect ymd group
#PREPBUFR_DIR_REGEX = .*\/rap\/(2[0-9]{9})
#PREPBUFR_DIR_REGEX = .*\/rap\/(2[0-9]{7})

#cycle=t(<pattern)z, offset=tm(<pattern>)
#PREPBUFR_FILE_REGEX = .*nam.t([0-9]{2})z.prepbufr.tm([0-9]{2})
#PREPBUFR_FILE_REGEX = .*rap.t([0-9]{2})z.prepbufr.tm([0-9]{2}).*


